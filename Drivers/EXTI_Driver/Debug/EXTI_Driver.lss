
EXTI_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b86  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000007  00800060  00800060  00000bfa  2**0
                  ALLOC
  2 .stab         00000c54  00000000  00000000  00000bfc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000005da  00000000  00000000  00001850  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__vector_1>
   8:	0c 94 0f 05 	jmp	0xa1e	; 0xa1e <__vector_2>
   c:	0c 94 42 05 	jmp	0xa84	; 0xa84 <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a7 36       	cpi	r26, 0x67	; 103
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 91 05 	call	0xb22	; 0xb22 <main>
  74:	0c 94 c1 05 	jmp	0xb82	; 0xb82 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <MDIO_voidInit>:
#include"../include/MCAL/DIO/DIO_interface.h"
#include"../include/MCAL/DIO/DIO_private.h"
#include"../include/MCAL/DIO/DIO_configuration.h"

void MDIO_voidInit (void)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
	DDRA_REG = CONC_BIT(PORTA_PIN7_DIRECTION, PORTA_PIN6_DIRECTION, PORTA_PIN5_DIRECTION, PORTA_PIN4_DIRECTION,
  84:	ea e3       	ldi	r30, 0x3A	; 58
  86:	f0 e0       	ldi	r31, 0x00	; 0
  88:	8f ef       	ldi	r24, 0xFF	; 255
  8a:	80 83       	st	Z, r24
						PORTA_PIN3_DIRECTION, PORTA_PIN2_DIRECTION, PORTA_PIN1_DIRECTION, PORTA_PIN0_DIRECTION);

	DDRB_REG = CONC_BIT(PORTB_PIN7_DIRECTION, PORTB_PIN6_DIRECTION, PORTB_PIN5_DIRECTION, PORTB_PIN4_DIRECTION,
  8c:	e7 e3       	ldi	r30, 0x37	; 55
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	8f ef       	ldi	r24, 0xFF	; 255
  92:	80 83       	st	Z, r24
						PORTB_PIN3_DIRECTION, PORTB_PIN2_DIRECTION, PORTB_PIN1_DIRECTION, PORTB_PIN0_DIRECTION);

	DDRC_REG = CONC_BIT(PORTC_PIN7_DIRECTION, PORTC_PIN6_DIRECTION, PORTC_PIN5_DIRECTION, PORTC_PIN4_DIRECTION,
  94:	e4 e3       	ldi	r30, 0x34	; 52
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	80 83       	st	Z, r24
						PORTC_PIN3_DIRECTION, PORTC_PIN2_DIRECTION, PORTC_PIN1_DIRECTION, PORTC_PIN0_DIRECTION);

	DDRD_REG = CONC_BIT(PORTD_PIN7_DIRECTION, PORTD_PIN6_DIRECTION, PORTD_PIN5_DIRECTION, PORTD_PIN4_DIRECTION,
  9c:	e1 e3       	ldi	r30, 0x31	; 49
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	8b ef       	ldi	r24, 0xFB	; 251
  a2:	80 83       	st	Z, r24
						PORTD_PIN3_DIRECTION, PORTD_PIN2_DIRECTION, PORTD_PIN1_DIRECTION, PORTD_PIN0_DIRECTION);

	PORTA_REG = CONC_BIT(PORTA_PIN7_VALUE, PORTA_PIN6_VALUE, PORTA_PIN5_VALUE, PORTA_PIN4_VALUE,
  a4:	eb e3       	ldi	r30, 0x3B	; 59
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	10 82       	st	Z, r1
						 PORTA_PIN3_VALUE, PORTA_PIN2_VALUE, PORTA_PIN1_VALUE, PORTA_PIN0_VALUE);

	PORTB_REG = CONC_BIT(PORTB_PIN7_VALUE, PORTB_PIN6_VALUE, PORTB_PIN5_VALUE, PORTB_PIN4_VALUE,
  aa:	e8 e3       	ldi	r30, 0x38	; 56
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	10 82       	st	Z, r1
						 PORTB_PIN3_VALUE, PORTB_PIN2_VALUE, PORTB_PIN1_VALUE, PORTB_PIN0_VALUE);

	PORTC_REG = CONC_BIT(PORTC_PIN7_VALUE, PORTC_PIN6_VALUE, PORTC_PIN5_VALUE, PORTC_PIN4_VALUE,
  b0:	e5 e3       	ldi	r30, 0x35	; 53
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	10 82       	st	Z, r1
		   				 PORTC_PIN3_VALUE, PORTC_PIN2_VALUE, PORTC_PIN1_VALUE, PORTC_PIN0_VALUE);

	PORTD_REG = CONC_BIT(PORTD_PIN7_VALUE, PORTD_PIN6_VALUE, PORTD_PIN5_VALUE, PORTD_PIN4_VALUE,
  b6:	e2 e3       	ldi	r30, 0x32	; 50
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	84 e0       	ldi	r24, 0x04	; 4
  bc:	80 83       	st	Z, r24
						 PORTD_PIN3_VALUE, PORTD_PIN2_VALUE, PORTD_PIN1_VALUE, PORTD_PIN0_VALUE);

}
  be:	cf 91       	pop	r28
  c0:	df 91       	pop	r29
  c2:	08 95       	ret

000000c4 <MDIO_voidSetPinDirection>:
// PORT ID :- POTRTA - PORTB - PORTC - PORTD
// PIN ID :- PIN0 ... PIN7
// PIN DIRECTION:- PIN_INPUT - PIN_OUTPUT
void MDIO_voidSetPinDirection (u8 A_u8PortId, u8 A_u8PinId, u8 A_u8Direction)
{
  c4:	df 93       	push	r29
  c6:	cf 93       	push	r28
  c8:	cd b7       	in	r28, 0x3d	; 61
  ca:	de b7       	in	r29, 0x3e	; 62
  cc:	2d 97       	sbiw	r28, 0x0d	; 13
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	f8 94       	cli
  d2:	de bf       	out	0x3e, r29	; 62
  d4:	0f be       	out	0x3f, r0	; 63
  d6:	cd bf       	out	0x3d, r28	; 61
  d8:	89 83       	std	Y+1, r24	; 0x01
  da:	6a 83       	std	Y+2, r22	; 0x02
  dc:	4b 83       	std	Y+3, r20	; 0x03
	switch(A_u8PortId)
  de:	89 81       	ldd	r24, Y+1	; 0x01
  e0:	28 2f       	mov	r18, r24
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	3d 87       	std	Y+13, r19	; 0x0d
  e6:	2c 87       	std	Y+12, r18	; 0x0c
  e8:	8c 85       	ldd	r24, Y+12	; 0x0c
  ea:	9d 85       	ldd	r25, Y+13	; 0x0d
  ec:	81 30       	cpi	r24, 0x01	; 1
  ee:	91 05       	cpc	r25, r1
  f0:	09 f4       	brne	.+2      	; 0xf4 <MDIO_voidSetPinDirection+0x30>
  f2:	4f c0       	rjmp	.+158    	; 0x192 <MDIO_voidSetPinDirection+0xce>
  f4:	2c 85       	ldd	r18, Y+12	; 0x0c
  f6:	3d 85       	ldd	r19, Y+13	; 0x0d
  f8:	22 30       	cpi	r18, 0x02	; 2
  fa:	31 05       	cpc	r19, r1
  fc:	2c f4       	brge	.+10     	; 0x108 <MDIO_voidSetPinDirection+0x44>
  fe:	8c 85       	ldd	r24, Y+12	; 0x0c
 100:	9d 85       	ldd	r25, Y+13	; 0x0d
 102:	00 97       	sbiw	r24, 0x00	; 0
 104:	71 f0       	breq	.+28     	; 0x122 <MDIO_voidSetPinDirection+0x5e>
 106:	eb c0       	rjmp	.+470    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
 108:	2c 85       	ldd	r18, Y+12	; 0x0c
 10a:	3d 85       	ldd	r19, Y+13	; 0x0d
 10c:	22 30       	cpi	r18, 0x02	; 2
 10e:	31 05       	cpc	r19, r1
 110:	09 f4       	brne	.+2      	; 0x114 <MDIO_voidSetPinDirection+0x50>
 112:	77 c0       	rjmp	.+238    	; 0x202 <MDIO_voidSetPinDirection+0x13e>
 114:	8c 85       	ldd	r24, Y+12	; 0x0c
 116:	9d 85       	ldd	r25, Y+13	; 0x0d
 118:	83 30       	cpi	r24, 0x03	; 3
 11a:	91 05       	cpc	r25, r1
 11c:	09 f4       	brne	.+2      	; 0x120 <MDIO_voidSetPinDirection+0x5c>
 11e:	a9 c0       	rjmp	.+338    	; 0x272 <MDIO_voidSetPinDirection+0x1ae>
 120:	de c0       	rjmp	.+444    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
	{
	case PORTA:
		switch(A_u8Direction)
 122:	8b 81       	ldd	r24, Y+3	; 0x03
 124:	28 2f       	mov	r18, r24
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	3b 87       	std	Y+11, r19	; 0x0b
 12a:	2a 87       	std	Y+10, r18	; 0x0a
 12c:	8a 85       	ldd	r24, Y+10	; 0x0a
 12e:	9b 85       	ldd	r25, Y+11	; 0x0b
 130:	00 97       	sbiw	r24, 0x00	; 0
 132:	d1 f0       	breq	.+52     	; 0x168 <MDIO_voidSetPinDirection+0xa4>
 134:	2a 85       	ldd	r18, Y+10	; 0x0a
 136:	3b 85       	ldd	r19, Y+11	; 0x0b
 138:	21 30       	cpi	r18, 0x01	; 1
 13a:	31 05       	cpc	r19, r1
 13c:	09 f0       	breq	.+2      	; 0x140 <MDIO_voidSetPinDirection+0x7c>
 13e:	cf c0       	rjmp	.+414    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
		{
		case PIN_OUTPUT: SET_BIT(DDRA_REG,A_u8PinId);
 140:	aa e3       	ldi	r26, 0x3A	; 58
 142:	b0 e0       	ldi	r27, 0x00	; 0
 144:	ea e3       	ldi	r30, 0x3A	; 58
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	48 2f       	mov	r20, r24
 14c:	8a 81       	ldd	r24, Y+2	; 0x02
 14e:	28 2f       	mov	r18, r24
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	02 2e       	mov	r0, r18
 158:	02 c0       	rjmp	.+4      	; 0x15e <MDIO_voidSetPinDirection+0x9a>
 15a:	88 0f       	add	r24, r24
 15c:	99 1f       	adc	r25, r25
 15e:	0a 94       	dec	r0
 160:	e2 f7       	brpl	.-8      	; 0x15a <MDIO_voidSetPinDirection+0x96>
 162:	84 2b       	or	r24, r20
 164:	8c 93       	st	X, r24
 166:	bb c0       	rjmp	.+374    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
						 break;
		case PIN_INPUT : CLR_BIT(DDRA_REG,A_u8PinId);
 168:	aa e3       	ldi	r26, 0x3A	; 58
 16a:	b0 e0       	ldi	r27, 0x00	; 0
 16c:	ea e3       	ldi	r30, 0x3A	; 58
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	48 2f       	mov	r20, r24
 174:	8a 81       	ldd	r24, Y+2	; 0x02
 176:	28 2f       	mov	r18, r24
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 2e       	mov	r0, r18
 180:	02 c0       	rjmp	.+4      	; 0x186 <MDIO_voidSetPinDirection+0xc2>
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	0a 94       	dec	r0
 188:	e2 f7       	brpl	.-8      	; 0x182 <MDIO_voidSetPinDirection+0xbe>
 18a:	80 95       	com	r24
 18c:	84 23       	and	r24, r20
 18e:	8c 93       	st	X, r24
 190:	a6 c0       	rjmp	.+332    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
		default:
				 break;
		}
		break;
	case PORTB:
		switch(A_u8Direction)
 192:	8b 81       	ldd	r24, Y+3	; 0x03
 194:	28 2f       	mov	r18, r24
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	39 87       	std	Y+9, r19	; 0x09
 19a:	28 87       	std	Y+8, r18	; 0x08
 19c:	88 85       	ldd	r24, Y+8	; 0x08
 19e:	99 85       	ldd	r25, Y+9	; 0x09
 1a0:	00 97       	sbiw	r24, 0x00	; 0
 1a2:	d1 f0       	breq	.+52     	; 0x1d8 <MDIO_voidSetPinDirection+0x114>
 1a4:	28 85       	ldd	r18, Y+8	; 0x08
 1a6:	39 85       	ldd	r19, Y+9	; 0x09
 1a8:	21 30       	cpi	r18, 0x01	; 1
 1aa:	31 05       	cpc	r19, r1
 1ac:	09 f0       	breq	.+2      	; 0x1b0 <MDIO_voidSetPinDirection+0xec>
 1ae:	97 c0       	rjmp	.+302    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
		{
		case PIN_OUTPUT: SET_BIT(DDRB_REG,A_u8PinId);
 1b0:	a7 e3       	ldi	r26, 0x37	; 55
 1b2:	b0 e0       	ldi	r27, 0x00	; 0
 1b4:	e7 e3       	ldi	r30, 0x37	; 55
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	80 81       	ld	r24, Z
 1ba:	48 2f       	mov	r20, r24
 1bc:	8a 81       	ldd	r24, Y+2	; 0x02
 1be:	28 2f       	mov	r18, r24
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 2e       	mov	r0, r18
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <MDIO_voidSetPinDirection+0x10a>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	0a 94       	dec	r0
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <MDIO_voidSetPinDirection+0x106>
 1d2:	84 2b       	or	r24, r20
 1d4:	8c 93       	st	X, r24
 1d6:	83 c0       	rjmp	.+262    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
						 break;
		case PIN_INPUT : CLR_BIT(DDRB_REG,A_u8PinId);
 1d8:	a7 e3       	ldi	r26, 0x37	; 55
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	e7 e3       	ldi	r30, 0x37	; 55
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	48 2f       	mov	r20, r24
 1e4:	8a 81       	ldd	r24, Y+2	; 0x02
 1e6:	28 2f       	mov	r18, r24
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 2e       	mov	r0, r18
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <MDIO_voidSetPinDirection+0x132>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	0a 94       	dec	r0
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <MDIO_voidSetPinDirection+0x12e>
 1fa:	80 95       	com	r24
 1fc:	84 23       	and	r24, r20
 1fe:	8c 93       	st	X, r24
 200:	6e c0       	rjmp	.+220    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
		default:
				break;
		}
		break;
	case PORTC:
		switch(A_u8Direction)
 202:	8b 81       	ldd	r24, Y+3	; 0x03
 204:	28 2f       	mov	r18, r24
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	3f 83       	std	Y+7, r19	; 0x07
 20a:	2e 83       	std	Y+6, r18	; 0x06
 20c:	8e 81       	ldd	r24, Y+6	; 0x06
 20e:	9f 81       	ldd	r25, Y+7	; 0x07
 210:	00 97       	sbiw	r24, 0x00	; 0
 212:	d1 f0       	breq	.+52     	; 0x248 <MDIO_voidSetPinDirection+0x184>
 214:	2e 81       	ldd	r18, Y+6	; 0x06
 216:	3f 81       	ldd	r19, Y+7	; 0x07
 218:	21 30       	cpi	r18, 0x01	; 1
 21a:	31 05       	cpc	r19, r1
 21c:	09 f0       	breq	.+2      	; 0x220 <MDIO_voidSetPinDirection+0x15c>
 21e:	5f c0       	rjmp	.+190    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
		{
		case PIN_OUTPUT: SET_BIT(DDRC_REG,A_u8PinId);
 220:	a4 e3       	ldi	r26, 0x34	; 52
 222:	b0 e0       	ldi	r27, 0x00	; 0
 224:	e4 e3       	ldi	r30, 0x34	; 52
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	80 81       	ld	r24, Z
 22a:	48 2f       	mov	r20, r24
 22c:	8a 81       	ldd	r24, Y+2	; 0x02
 22e:	28 2f       	mov	r18, r24
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 2e       	mov	r0, r18
 238:	02 c0       	rjmp	.+4      	; 0x23e <MDIO_voidSetPinDirection+0x17a>
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	0a 94       	dec	r0
 240:	e2 f7       	brpl	.-8      	; 0x23a <MDIO_voidSetPinDirection+0x176>
 242:	84 2b       	or	r24, r20
 244:	8c 93       	st	X, r24
 246:	4b c0       	rjmp	.+150    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
						 break;
		case PIN_INPUT : CLR_BIT(DDRC_REG,A_u8PinId);
 248:	a4 e3       	ldi	r26, 0x34	; 52
 24a:	b0 e0       	ldi	r27, 0x00	; 0
 24c:	e4 e3       	ldi	r30, 0x34	; 52
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	80 81       	ld	r24, Z
 252:	48 2f       	mov	r20, r24
 254:	8a 81       	ldd	r24, Y+2	; 0x02
 256:	28 2f       	mov	r18, r24
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 2e       	mov	r0, r18
 260:	02 c0       	rjmp	.+4      	; 0x266 <MDIO_voidSetPinDirection+0x1a2>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	0a 94       	dec	r0
 268:	e2 f7       	brpl	.-8      	; 0x262 <MDIO_voidSetPinDirection+0x19e>
 26a:	80 95       	com	r24
 26c:	84 23       	and	r24, r20
 26e:	8c 93       	st	X, r24
 270:	36 c0       	rjmp	.+108    	; 0x2de <MDIO_voidSetPinDirection+0x21a>
		default:
				break;
		}
		break;
	case PORTD:
		switch(A_u8Direction)
 272:	8b 81       	ldd	r24, Y+3	; 0x03
 274:	28 2f       	mov	r18, r24
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	3d 83       	std	Y+5, r19	; 0x05
 27a:	2c 83       	std	Y+4, r18	; 0x04
 27c:	8c 81       	ldd	r24, Y+4	; 0x04
 27e:	9d 81       	ldd	r25, Y+5	; 0x05
 280:	00 97       	sbiw	r24, 0x00	; 0
 282:	c9 f0       	breq	.+50     	; 0x2b6 <MDIO_voidSetPinDirection+0x1f2>
 284:	2c 81       	ldd	r18, Y+4	; 0x04
 286:	3d 81       	ldd	r19, Y+5	; 0x05
 288:	21 30       	cpi	r18, 0x01	; 1
 28a:	31 05       	cpc	r19, r1
 28c:	41 f5       	brne	.+80     	; 0x2de <MDIO_voidSetPinDirection+0x21a>
		{
		case PIN_OUTPUT: SET_BIT(DDRD_REG,A_u8PinId);
 28e:	a1 e3       	ldi	r26, 0x31	; 49
 290:	b0 e0       	ldi	r27, 0x00	; 0
 292:	e1 e3       	ldi	r30, 0x31	; 49
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	80 81       	ld	r24, Z
 298:	48 2f       	mov	r20, r24
 29a:	8a 81       	ldd	r24, Y+2	; 0x02
 29c:	28 2f       	mov	r18, r24
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	02 2e       	mov	r0, r18
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <MDIO_voidSetPinDirection+0x1e8>
 2a8:	88 0f       	add	r24, r24
 2aa:	99 1f       	adc	r25, r25
 2ac:	0a 94       	dec	r0
 2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <MDIO_voidSetPinDirection+0x1e4>
 2b0:	84 2b       	or	r24, r20
 2b2:	8c 93       	st	X, r24
 2b4:	14 c0       	rjmp	.+40     	; 0x2de <MDIO_voidSetPinDirection+0x21a>
						 break;
		case PIN_INPUT : CLR_BIT(DDRD_REG,A_u8PinId);
 2b6:	a1 e3       	ldi	r26, 0x31	; 49
 2b8:	b0 e0       	ldi	r27, 0x00	; 0
 2ba:	e1 e3       	ldi	r30, 0x31	; 49
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	80 81       	ld	r24, Z
 2c0:	48 2f       	mov	r20, r24
 2c2:	8a 81       	ldd	r24, Y+2	; 0x02
 2c4:	28 2f       	mov	r18, r24
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	02 2e       	mov	r0, r18
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <MDIO_voidSetPinDirection+0x210>
 2d0:	88 0f       	add	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	0a 94       	dec	r0
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <MDIO_voidSetPinDirection+0x20c>
 2d8:	80 95       	com	r24
 2da:	84 23       	and	r24, r20
 2dc:	8c 93       	st	X, r24
		}
		break;
	default:
		break;
	}
}
 2de:	2d 96       	adiw	r28, 0x0d	; 13
 2e0:	0f b6       	in	r0, 0x3f	; 63
 2e2:	f8 94       	cli
 2e4:	de bf       	out	0x3e, r29	; 62
 2e6:	0f be       	out	0x3f, r0	; 63
 2e8:	cd bf       	out	0x3d, r28	; 61
 2ea:	cf 91       	pop	r28
 2ec:	df 91       	pop	r29
 2ee:	08 95       	ret

000002f0 <MDIO_voidSetPinValue>:
// PORT ID :- POTRTA - PORTB - PORTC - PORTD
// PIN ID :- PIN0 ... PIN7
// PIN VALUE:- PIN_LOW - PIN_HIGH
void MDIO_voidSetPinValue (u8 A_u8PortId, u8 A_u8PinId, u8 A_u8Value)
{
 2f0:	df 93       	push	r29
 2f2:	cf 93       	push	r28
 2f4:	cd b7       	in	r28, 0x3d	; 61
 2f6:	de b7       	in	r29, 0x3e	; 62
 2f8:	2d 97       	sbiw	r28, 0x0d	; 13
 2fa:	0f b6       	in	r0, 0x3f	; 63
 2fc:	f8 94       	cli
 2fe:	de bf       	out	0x3e, r29	; 62
 300:	0f be       	out	0x3f, r0	; 63
 302:	cd bf       	out	0x3d, r28	; 61
 304:	89 83       	std	Y+1, r24	; 0x01
 306:	6a 83       	std	Y+2, r22	; 0x02
 308:	4b 83       	std	Y+3, r20	; 0x03
	switch(A_u8PortId)
 30a:	89 81       	ldd	r24, Y+1	; 0x01
 30c:	28 2f       	mov	r18, r24
 30e:	30 e0       	ldi	r19, 0x00	; 0
 310:	3d 87       	std	Y+13, r19	; 0x0d
 312:	2c 87       	std	Y+12, r18	; 0x0c
 314:	8c 85       	ldd	r24, Y+12	; 0x0c
 316:	9d 85       	ldd	r25, Y+13	; 0x0d
 318:	81 30       	cpi	r24, 0x01	; 1
 31a:	91 05       	cpc	r25, r1
 31c:	09 f4       	brne	.+2      	; 0x320 <MDIO_voidSetPinValue+0x30>
 31e:	4f c0       	rjmp	.+158    	; 0x3be <MDIO_voidSetPinValue+0xce>
 320:	2c 85       	ldd	r18, Y+12	; 0x0c
 322:	3d 85       	ldd	r19, Y+13	; 0x0d
 324:	22 30       	cpi	r18, 0x02	; 2
 326:	31 05       	cpc	r19, r1
 328:	2c f4       	brge	.+10     	; 0x334 <MDIO_voidSetPinValue+0x44>
 32a:	8c 85       	ldd	r24, Y+12	; 0x0c
 32c:	9d 85       	ldd	r25, Y+13	; 0x0d
 32e:	00 97       	sbiw	r24, 0x00	; 0
 330:	71 f0       	breq	.+28     	; 0x34e <MDIO_voidSetPinValue+0x5e>
 332:	eb c0       	rjmp	.+470    	; 0x50a <MDIO_voidSetPinValue+0x21a>
 334:	2c 85       	ldd	r18, Y+12	; 0x0c
 336:	3d 85       	ldd	r19, Y+13	; 0x0d
 338:	22 30       	cpi	r18, 0x02	; 2
 33a:	31 05       	cpc	r19, r1
 33c:	09 f4       	brne	.+2      	; 0x340 <MDIO_voidSetPinValue+0x50>
 33e:	77 c0       	rjmp	.+238    	; 0x42e <MDIO_voidSetPinValue+0x13e>
 340:	8c 85       	ldd	r24, Y+12	; 0x0c
 342:	9d 85       	ldd	r25, Y+13	; 0x0d
 344:	83 30       	cpi	r24, 0x03	; 3
 346:	91 05       	cpc	r25, r1
 348:	09 f4       	brne	.+2      	; 0x34c <MDIO_voidSetPinValue+0x5c>
 34a:	a9 c0       	rjmp	.+338    	; 0x49e <MDIO_voidSetPinValue+0x1ae>
 34c:	de c0       	rjmp	.+444    	; 0x50a <MDIO_voidSetPinValue+0x21a>
		{
		case PORTA:
			switch(A_u8Value)
 34e:	8b 81       	ldd	r24, Y+3	; 0x03
 350:	28 2f       	mov	r18, r24
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	3b 87       	std	Y+11, r19	; 0x0b
 356:	2a 87       	std	Y+10, r18	; 0x0a
 358:	8a 85       	ldd	r24, Y+10	; 0x0a
 35a:	9b 85       	ldd	r25, Y+11	; 0x0b
 35c:	00 97       	sbiw	r24, 0x00	; 0
 35e:	d1 f0       	breq	.+52     	; 0x394 <MDIO_voidSetPinValue+0xa4>
 360:	2a 85       	ldd	r18, Y+10	; 0x0a
 362:	3b 85       	ldd	r19, Y+11	; 0x0b
 364:	21 30       	cpi	r18, 0x01	; 1
 366:	31 05       	cpc	r19, r1
 368:	09 f0       	breq	.+2      	; 0x36c <MDIO_voidSetPinValue+0x7c>
 36a:	cf c0       	rjmp	.+414    	; 0x50a <MDIO_voidSetPinValue+0x21a>
			{
			case PIN_HIGH: SET_BIT(PORTA_REG,A_u8PinId);
 36c:	ab e3       	ldi	r26, 0x3B	; 59
 36e:	b0 e0       	ldi	r27, 0x00	; 0
 370:	eb e3       	ldi	r30, 0x3B	; 59
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	80 81       	ld	r24, Z
 376:	48 2f       	mov	r20, r24
 378:	8a 81       	ldd	r24, Y+2	; 0x02
 37a:	28 2f       	mov	r18, r24
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	02 2e       	mov	r0, r18
 384:	02 c0       	rjmp	.+4      	; 0x38a <MDIO_voidSetPinValue+0x9a>
 386:	88 0f       	add	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	0a 94       	dec	r0
 38c:	e2 f7       	brpl	.-8      	; 0x386 <MDIO_voidSetPinValue+0x96>
 38e:	84 2b       	or	r24, r20
 390:	8c 93       	st	X, r24
 392:	bb c0       	rjmp	.+374    	; 0x50a <MDIO_voidSetPinValue+0x21a>
						   break;
			case PIN_LOW : CLR_BIT(PORTA_REG,A_u8PinId);
 394:	ab e3       	ldi	r26, 0x3B	; 59
 396:	b0 e0       	ldi	r27, 0x00	; 0
 398:	eb e3       	ldi	r30, 0x3B	; 59
 39a:	f0 e0       	ldi	r31, 0x00	; 0
 39c:	80 81       	ld	r24, Z
 39e:	48 2f       	mov	r20, r24
 3a0:	8a 81       	ldd	r24, Y+2	; 0x02
 3a2:	28 2f       	mov	r18, r24
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	02 2e       	mov	r0, r18
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <MDIO_voidSetPinValue+0xc2>
 3ae:	88 0f       	add	r24, r24
 3b0:	99 1f       	adc	r25, r25
 3b2:	0a 94       	dec	r0
 3b4:	e2 f7       	brpl	.-8      	; 0x3ae <MDIO_voidSetPinValue+0xbe>
 3b6:	80 95       	com	r24
 3b8:	84 23       	and	r24, r20
 3ba:	8c 93       	st	X, r24
 3bc:	a6 c0       	rjmp	.+332    	; 0x50a <MDIO_voidSetPinValue+0x21a>
			default:
					 break;
			}
			break;
		case PORTB:
			switch(A_u8Value)
 3be:	8b 81       	ldd	r24, Y+3	; 0x03
 3c0:	28 2f       	mov	r18, r24
 3c2:	30 e0       	ldi	r19, 0x00	; 0
 3c4:	39 87       	std	Y+9, r19	; 0x09
 3c6:	28 87       	std	Y+8, r18	; 0x08
 3c8:	88 85       	ldd	r24, Y+8	; 0x08
 3ca:	99 85       	ldd	r25, Y+9	; 0x09
 3cc:	00 97       	sbiw	r24, 0x00	; 0
 3ce:	d1 f0       	breq	.+52     	; 0x404 <MDIO_voidSetPinValue+0x114>
 3d0:	28 85       	ldd	r18, Y+8	; 0x08
 3d2:	39 85       	ldd	r19, Y+9	; 0x09
 3d4:	21 30       	cpi	r18, 0x01	; 1
 3d6:	31 05       	cpc	r19, r1
 3d8:	09 f0       	breq	.+2      	; 0x3dc <MDIO_voidSetPinValue+0xec>
 3da:	97 c0       	rjmp	.+302    	; 0x50a <MDIO_voidSetPinValue+0x21a>
			{
			case PIN_HIGH: SET_BIT(PORTB_REG,A_u8PinId);
 3dc:	a8 e3       	ldi	r26, 0x38	; 56
 3de:	b0 e0       	ldi	r27, 0x00	; 0
 3e0:	e8 e3       	ldi	r30, 0x38	; 56
 3e2:	f0 e0       	ldi	r31, 0x00	; 0
 3e4:	80 81       	ld	r24, Z
 3e6:	48 2f       	mov	r20, r24
 3e8:	8a 81       	ldd	r24, Y+2	; 0x02
 3ea:	28 2f       	mov	r18, r24
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	02 2e       	mov	r0, r18
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <MDIO_voidSetPinValue+0x10a>
 3f6:	88 0f       	add	r24, r24
 3f8:	99 1f       	adc	r25, r25
 3fa:	0a 94       	dec	r0
 3fc:	e2 f7       	brpl	.-8      	; 0x3f6 <MDIO_voidSetPinValue+0x106>
 3fe:	84 2b       	or	r24, r20
 400:	8c 93       	st	X, r24
 402:	83 c0       	rjmp	.+262    	; 0x50a <MDIO_voidSetPinValue+0x21a>
					       break;
			case PIN_LOW : CLR_BIT(PORTB_REG,A_u8PinId);
 404:	a8 e3       	ldi	r26, 0x38	; 56
 406:	b0 e0       	ldi	r27, 0x00	; 0
 408:	e8 e3       	ldi	r30, 0x38	; 56
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	80 81       	ld	r24, Z
 40e:	48 2f       	mov	r20, r24
 410:	8a 81       	ldd	r24, Y+2	; 0x02
 412:	28 2f       	mov	r18, r24
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	02 2e       	mov	r0, r18
 41c:	02 c0       	rjmp	.+4      	; 0x422 <MDIO_voidSetPinValue+0x132>
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	0a 94       	dec	r0
 424:	e2 f7       	brpl	.-8      	; 0x41e <MDIO_voidSetPinValue+0x12e>
 426:	80 95       	com	r24
 428:	84 23       	and	r24, r20
 42a:	8c 93       	st	X, r24
 42c:	6e c0       	rjmp	.+220    	; 0x50a <MDIO_voidSetPinValue+0x21a>
			default:
					break;
			}
			break;
		case PORTC:
			switch(A_u8Value)
 42e:	8b 81       	ldd	r24, Y+3	; 0x03
 430:	28 2f       	mov	r18, r24
 432:	30 e0       	ldi	r19, 0x00	; 0
 434:	3f 83       	std	Y+7, r19	; 0x07
 436:	2e 83       	std	Y+6, r18	; 0x06
 438:	8e 81       	ldd	r24, Y+6	; 0x06
 43a:	9f 81       	ldd	r25, Y+7	; 0x07
 43c:	00 97       	sbiw	r24, 0x00	; 0
 43e:	d1 f0       	breq	.+52     	; 0x474 <MDIO_voidSetPinValue+0x184>
 440:	2e 81       	ldd	r18, Y+6	; 0x06
 442:	3f 81       	ldd	r19, Y+7	; 0x07
 444:	21 30       	cpi	r18, 0x01	; 1
 446:	31 05       	cpc	r19, r1
 448:	09 f0       	breq	.+2      	; 0x44c <MDIO_voidSetPinValue+0x15c>
 44a:	5f c0       	rjmp	.+190    	; 0x50a <MDIO_voidSetPinValue+0x21a>
			{
			case PIN_HIGH: SET_BIT(PORTC_REG,A_u8PinId);
 44c:	a5 e3       	ldi	r26, 0x35	; 53
 44e:	b0 e0       	ldi	r27, 0x00	; 0
 450:	e5 e3       	ldi	r30, 0x35	; 53
 452:	f0 e0       	ldi	r31, 0x00	; 0
 454:	80 81       	ld	r24, Z
 456:	48 2f       	mov	r20, r24
 458:	8a 81       	ldd	r24, Y+2	; 0x02
 45a:	28 2f       	mov	r18, r24
 45c:	30 e0       	ldi	r19, 0x00	; 0
 45e:	81 e0       	ldi	r24, 0x01	; 1
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	02 2e       	mov	r0, r18
 464:	02 c0       	rjmp	.+4      	; 0x46a <MDIO_voidSetPinValue+0x17a>
 466:	88 0f       	add	r24, r24
 468:	99 1f       	adc	r25, r25
 46a:	0a 94       	dec	r0
 46c:	e2 f7       	brpl	.-8      	; 0x466 <MDIO_voidSetPinValue+0x176>
 46e:	84 2b       	or	r24, r20
 470:	8c 93       	st	X, r24
 472:	4b c0       	rjmp	.+150    	; 0x50a <MDIO_voidSetPinValue+0x21a>
						   break;
			case PIN_LOW : CLR_BIT(PORTC_REG,A_u8PinId);
 474:	a5 e3       	ldi	r26, 0x35	; 53
 476:	b0 e0       	ldi	r27, 0x00	; 0
 478:	e5 e3       	ldi	r30, 0x35	; 53
 47a:	f0 e0       	ldi	r31, 0x00	; 0
 47c:	80 81       	ld	r24, Z
 47e:	48 2f       	mov	r20, r24
 480:	8a 81       	ldd	r24, Y+2	; 0x02
 482:	28 2f       	mov	r18, r24
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	81 e0       	ldi	r24, 0x01	; 1
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	02 2e       	mov	r0, r18
 48c:	02 c0       	rjmp	.+4      	; 0x492 <MDIO_voidSetPinValue+0x1a2>
 48e:	88 0f       	add	r24, r24
 490:	99 1f       	adc	r25, r25
 492:	0a 94       	dec	r0
 494:	e2 f7       	brpl	.-8      	; 0x48e <MDIO_voidSetPinValue+0x19e>
 496:	80 95       	com	r24
 498:	84 23       	and	r24, r20
 49a:	8c 93       	st	X, r24
 49c:	36 c0       	rjmp	.+108    	; 0x50a <MDIO_voidSetPinValue+0x21a>
			default:
					break;
			}
			break;
		case PORTD:
			switch(A_u8Value)
 49e:	8b 81       	ldd	r24, Y+3	; 0x03
 4a0:	28 2f       	mov	r18, r24
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	3d 83       	std	Y+5, r19	; 0x05
 4a6:	2c 83       	std	Y+4, r18	; 0x04
 4a8:	8c 81       	ldd	r24, Y+4	; 0x04
 4aa:	9d 81       	ldd	r25, Y+5	; 0x05
 4ac:	00 97       	sbiw	r24, 0x00	; 0
 4ae:	c9 f0       	breq	.+50     	; 0x4e2 <MDIO_voidSetPinValue+0x1f2>
 4b0:	2c 81       	ldd	r18, Y+4	; 0x04
 4b2:	3d 81       	ldd	r19, Y+5	; 0x05
 4b4:	21 30       	cpi	r18, 0x01	; 1
 4b6:	31 05       	cpc	r19, r1
 4b8:	41 f5       	brne	.+80     	; 0x50a <MDIO_voidSetPinValue+0x21a>
			{
			case PIN_HIGH: SET_BIT(PORTD_REG,A_u8PinId);
 4ba:	a2 e3       	ldi	r26, 0x32	; 50
 4bc:	b0 e0       	ldi	r27, 0x00	; 0
 4be:	e2 e3       	ldi	r30, 0x32	; 50
 4c0:	f0 e0       	ldi	r31, 0x00	; 0
 4c2:	80 81       	ld	r24, Z
 4c4:	48 2f       	mov	r20, r24
 4c6:	8a 81       	ldd	r24, Y+2	; 0x02
 4c8:	28 2f       	mov	r18, r24
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	02 2e       	mov	r0, r18
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <MDIO_voidSetPinValue+0x1e8>
 4d4:	88 0f       	add	r24, r24
 4d6:	99 1f       	adc	r25, r25
 4d8:	0a 94       	dec	r0
 4da:	e2 f7       	brpl	.-8      	; 0x4d4 <MDIO_voidSetPinValue+0x1e4>
 4dc:	84 2b       	or	r24, r20
 4de:	8c 93       	st	X, r24
 4e0:	14 c0       	rjmp	.+40     	; 0x50a <MDIO_voidSetPinValue+0x21a>
							 break;
			case PIN_LOW : CLR_BIT(PORTD_REG,A_u8PinId);
 4e2:	a2 e3       	ldi	r26, 0x32	; 50
 4e4:	b0 e0       	ldi	r27, 0x00	; 0
 4e6:	e2 e3       	ldi	r30, 0x32	; 50
 4e8:	f0 e0       	ldi	r31, 0x00	; 0
 4ea:	80 81       	ld	r24, Z
 4ec:	48 2f       	mov	r20, r24
 4ee:	8a 81       	ldd	r24, Y+2	; 0x02
 4f0:	28 2f       	mov	r18, r24
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	02 2e       	mov	r0, r18
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <MDIO_voidSetPinValue+0x210>
 4fc:	88 0f       	add	r24, r24
 4fe:	99 1f       	adc	r25, r25
 500:	0a 94       	dec	r0
 502:	e2 f7       	brpl	.-8      	; 0x4fc <MDIO_voidSetPinValue+0x20c>
 504:	80 95       	com	r24
 506:	84 23       	and	r24, r20
 508:	8c 93       	st	X, r24
		default:
			break;
		}


}
 50a:	2d 96       	adiw	r28, 0x0d	; 13
 50c:	0f b6       	in	r0, 0x3f	; 63
 50e:	f8 94       	cli
 510:	de bf       	out	0x3e, r29	; 62
 512:	0f be       	out	0x3f, r0	; 63
 514:	cd bf       	out	0x3d, r28	; 61
 516:	cf 91       	pop	r28
 518:	df 91       	pop	r29
 51a:	08 95       	ret

0000051c <MDIO_u8GetPinValue>:

// PORT ID :- POTRTA - PORTB - PORTC - PORTD
// PIN ID :- PIN0 ... PIN7
u8 MDIO_u8GetPinValue(u8 A_u8PortId, u8 A_u8PinId)
{
 51c:	df 93       	push	r29
 51e:	cf 93       	push	r28
 520:	00 d0       	rcall	.+0      	; 0x522 <MDIO_u8GetPinValue+0x6>
 522:	00 d0       	rcall	.+0      	; 0x524 <MDIO_u8GetPinValue+0x8>
 524:	0f 92       	push	r0
 526:	cd b7       	in	r28, 0x3d	; 61
 528:	de b7       	in	r29, 0x3e	; 62
 52a:	8a 83       	std	Y+2, r24	; 0x02
 52c:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8PinValue=0;
 52e:	19 82       	std	Y+1, r1	; 0x01
	switch(A_u8PortId)
 530:	8a 81       	ldd	r24, Y+2	; 0x02
 532:	28 2f       	mov	r18, r24
 534:	30 e0       	ldi	r19, 0x00	; 0
 536:	3d 83       	std	Y+5, r19	; 0x05
 538:	2c 83       	std	Y+4, r18	; 0x04
 53a:	4c 81       	ldd	r20, Y+4	; 0x04
 53c:	5d 81       	ldd	r21, Y+5	; 0x05
 53e:	41 30       	cpi	r20, 0x01	; 1
 540:	51 05       	cpc	r21, r1
 542:	41 f1       	breq	.+80     	; 0x594 <MDIO_u8GetPinValue+0x78>
 544:	8c 81       	ldd	r24, Y+4	; 0x04
 546:	9d 81       	ldd	r25, Y+5	; 0x05
 548:	82 30       	cpi	r24, 0x02	; 2
 54a:	91 05       	cpc	r25, r1
 54c:	34 f4       	brge	.+12     	; 0x55a <MDIO_u8GetPinValue+0x3e>
 54e:	2c 81       	ldd	r18, Y+4	; 0x04
 550:	3d 81       	ldd	r19, Y+5	; 0x05
 552:	21 15       	cp	r18, r1
 554:	31 05       	cpc	r19, r1
 556:	61 f0       	breq	.+24     	; 0x570 <MDIO_u8GetPinValue+0x54>
 558:	52 c0       	rjmp	.+164    	; 0x5fe <MDIO_u8GetPinValue+0xe2>
 55a:	4c 81       	ldd	r20, Y+4	; 0x04
 55c:	5d 81       	ldd	r21, Y+5	; 0x05
 55e:	42 30       	cpi	r20, 0x02	; 2
 560:	51 05       	cpc	r21, r1
 562:	51 f1       	breq	.+84     	; 0x5b8 <MDIO_u8GetPinValue+0x9c>
 564:	8c 81       	ldd	r24, Y+4	; 0x04
 566:	9d 81       	ldd	r25, Y+5	; 0x05
 568:	83 30       	cpi	r24, 0x03	; 3
 56a:	91 05       	cpc	r25, r1
 56c:	b9 f1       	breq	.+110    	; 0x5dc <MDIO_u8GetPinValue+0xc0>
 56e:	47 c0       	rjmp	.+142    	; 0x5fe <MDIO_u8GetPinValue+0xe2>
	{
	case PORTA: local_u8PinValue = GET_BIT(PINA_REG,A_u8PinId);
 570:	e9 e3       	ldi	r30, 0x39	; 57
 572:	f0 e0       	ldi	r31, 0x00	; 0
 574:	80 81       	ld	r24, Z
 576:	28 2f       	mov	r18, r24
 578:	30 e0       	ldi	r19, 0x00	; 0
 57a:	8b 81       	ldd	r24, Y+3	; 0x03
 57c:	88 2f       	mov	r24, r24
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	a9 01       	movw	r20, r18
 582:	02 c0       	rjmp	.+4      	; 0x588 <MDIO_u8GetPinValue+0x6c>
 584:	55 95       	asr	r21
 586:	47 95       	ror	r20
 588:	8a 95       	dec	r24
 58a:	e2 f7       	brpl	.-8      	; 0x584 <MDIO_u8GetPinValue+0x68>
 58c:	ca 01       	movw	r24, r20
 58e:	81 70       	andi	r24, 0x01	; 1
 590:	89 83       	std	Y+1, r24	; 0x01
 592:	35 c0       	rjmp	.+106    	; 0x5fe <MDIO_u8GetPinValue+0xe2>
				break;
	case PORTB: local_u8PinValue = GET_BIT(PINB_REG,A_u8PinId);
 594:	e6 e3       	ldi	r30, 0x36	; 54
 596:	f0 e0       	ldi	r31, 0x00	; 0
 598:	80 81       	ld	r24, Z
 59a:	28 2f       	mov	r18, r24
 59c:	30 e0       	ldi	r19, 0x00	; 0
 59e:	8b 81       	ldd	r24, Y+3	; 0x03
 5a0:	88 2f       	mov	r24, r24
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	a9 01       	movw	r20, r18
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <MDIO_u8GetPinValue+0x90>
 5a8:	55 95       	asr	r21
 5aa:	47 95       	ror	r20
 5ac:	8a 95       	dec	r24
 5ae:	e2 f7       	brpl	.-8      	; 0x5a8 <MDIO_u8GetPinValue+0x8c>
 5b0:	ca 01       	movw	r24, r20
 5b2:	81 70       	andi	r24, 0x01	; 1
 5b4:	89 83       	std	Y+1, r24	; 0x01
 5b6:	23 c0       	rjmp	.+70     	; 0x5fe <MDIO_u8GetPinValue+0xe2>
				break;
	case PORTC: local_u8PinValue = GET_BIT(PINC_REG,A_u8PinId);
 5b8:	e3 e3       	ldi	r30, 0x33	; 51
 5ba:	f0 e0       	ldi	r31, 0x00	; 0
 5bc:	80 81       	ld	r24, Z
 5be:	28 2f       	mov	r18, r24
 5c0:	30 e0       	ldi	r19, 0x00	; 0
 5c2:	8b 81       	ldd	r24, Y+3	; 0x03
 5c4:	88 2f       	mov	r24, r24
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	a9 01       	movw	r20, r18
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <MDIO_u8GetPinValue+0xb4>
 5cc:	55 95       	asr	r21
 5ce:	47 95       	ror	r20
 5d0:	8a 95       	dec	r24
 5d2:	e2 f7       	brpl	.-8      	; 0x5cc <MDIO_u8GetPinValue+0xb0>
 5d4:	ca 01       	movw	r24, r20
 5d6:	81 70       	andi	r24, 0x01	; 1
 5d8:	89 83       	std	Y+1, r24	; 0x01
 5da:	11 c0       	rjmp	.+34     	; 0x5fe <MDIO_u8GetPinValue+0xe2>
				break;
	case PORTD: local_u8PinValue = GET_BIT(PIND_REG,A_u8PinId);
 5dc:	e0 e3       	ldi	r30, 0x30	; 48
 5de:	f0 e0       	ldi	r31, 0x00	; 0
 5e0:	80 81       	ld	r24, Z
 5e2:	28 2f       	mov	r18, r24
 5e4:	30 e0       	ldi	r19, 0x00	; 0
 5e6:	8b 81       	ldd	r24, Y+3	; 0x03
 5e8:	88 2f       	mov	r24, r24
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	a9 01       	movw	r20, r18
 5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <MDIO_u8GetPinValue+0xd8>
 5f0:	55 95       	asr	r21
 5f2:	47 95       	ror	r20
 5f4:	8a 95       	dec	r24
 5f6:	e2 f7       	brpl	.-8      	; 0x5f0 <MDIO_u8GetPinValue+0xd4>
 5f8:	ca 01       	movw	r24, r20
 5fa:	81 70       	andi	r24, 0x01	; 1
 5fc:	89 83       	std	Y+1, r24	; 0x01
				break;
	default:	break;
	}
	return local_u8PinValue;
 5fe:	89 81       	ldd	r24, Y+1	; 0x01
}
 600:	0f 90       	pop	r0
 602:	0f 90       	pop	r0
 604:	0f 90       	pop	r0
 606:	0f 90       	pop	r0
 608:	0f 90       	pop	r0
 60a:	cf 91       	pop	r28
 60c:	df 91       	pop	r29
 60e:	08 95       	ret

00000610 <MDIO_voidSetPortValue>:
// PORT ID :- POTRTA - PORTB - PORTC - PORTD
// PORT VALUE:- PIN_LOW - PIN_HIGH
void MDIO_voidSetPortValue(u8 A_u8PortId, u8 A_u8Value)
{
 610:	df 93       	push	r29
 612:	cf 93       	push	r28
 614:	00 d0       	rcall	.+0      	; 0x616 <MDIO_voidSetPortValue+0x6>
 616:	00 d0       	rcall	.+0      	; 0x618 <MDIO_voidSetPortValue+0x8>
 618:	cd b7       	in	r28, 0x3d	; 61
 61a:	de b7       	in	r29, 0x3e	; 62
 61c:	89 83       	std	Y+1, r24	; 0x01
 61e:	6a 83       	std	Y+2, r22	; 0x02
	switch(A_u8PortId)
 620:	89 81       	ldd	r24, Y+1	; 0x01
 622:	28 2f       	mov	r18, r24
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	3c 83       	std	Y+4, r19	; 0x04
 628:	2b 83       	std	Y+3, r18	; 0x03
 62a:	8b 81       	ldd	r24, Y+3	; 0x03
 62c:	9c 81       	ldd	r25, Y+4	; 0x04
 62e:	81 30       	cpi	r24, 0x01	; 1
 630:	91 05       	cpc	r25, r1
 632:	d1 f0       	breq	.+52     	; 0x668 <MDIO_voidSetPortValue+0x58>
 634:	2b 81       	ldd	r18, Y+3	; 0x03
 636:	3c 81       	ldd	r19, Y+4	; 0x04
 638:	22 30       	cpi	r18, 0x02	; 2
 63a:	31 05       	cpc	r19, r1
 63c:	2c f4       	brge	.+10     	; 0x648 <MDIO_voidSetPortValue+0x38>
 63e:	8b 81       	ldd	r24, Y+3	; 0x03
 640:	9c 81       	ldd	r25, Y+4	; 0x04
 642:	00 97       	sbiw	r24, 0x00	; 0
 644:	61 f0       	breq	.+24     	; 0x65e <MDIO_voidSetPortValue+0x4e>
 646:	1e c0       	rjmp	.+60     	; 0x684 <MDIO_voidSetPortValue+0x74>
 648:	2b 81       	ldd	r18, Y+3	; 0x03
 64a:	3c 81       	ldd	r19, Y+4	; 0x04
 64c:	22 30       	cpi	r18, 0x02	; 2
 64e:	31 05       	cpc	r19, r1
 650:	81 f0       	breq	.+32     	; 0x672 <MDIO_voidSetPortValue+0x62>
 652:	8b 81       	ldd	r24, Y+3	; 0x03
 654:	9c 81       	ldd	r25, Y+4	; 0x04
 656:	83 30       	cpi	r24, 0x03	; 3
 658:	91 05       	cpc	r25, r1
 65a:	81 f0       	breq	.+32     	; 0x67c <MDIO_voidSetPortValue+0x6c>
 65c:	13 c0       	rjmp	.+38     	; 0x684 <MDIO_voidSetPortValue+0x74>
		{
		case PORTA: PORTA_REG =A_u8Value;
 65e:	eb e3       	ldi	r30, 0x3B	; 59
 660:	f0 e0       	ldi	r31, 0x00	; 0
 662:	8a 81       	ldd	r24, Y+2	; 0x02
 664:	80 83       	st	Z, r24
 666:	0e c0       	rjmp	.+28     	; 0x684 <MDIO_voidSetPortValue+0x74>
					break;
		case PORTB: PORTB_REG =A_u8Value;
 668:	e8 e3       	ldi	r30, 0x38	; 56
 66a:	f0 e0       	ldi	r31, 0x00	; 0
 66c:	8a 81       	ldd	r24, Y+2	; 0x02
 66e:	80 83       	st	Z, r24
 670:	09 c0       	rjmp	.+18     	; 0x684 <MDIO_voidSetPortValue+0x74>
					break;
		case PORTC: PORTC_REG =A_u8Value;
 672:	e5 e3       	ldi	r30, 0x35	; 53
 674:	f0 e0       	ldi	r31, 0x00	; 0
 676:	8a 81       	ldd	r24, Y+2	; 0x02
 678:	80 83       	st	Z, r24
 67a:	04 c0       	rjmp	.+8      	; 0x684 <MDIO_voidSetPortValue+0x74>
					break;
		case PORTD: PORTD_REG =A_u8Value;
 67c:	e2 e3       	ldi	r30, 0x32	; 50
 67e:	f0 e0       	ldi	r31, 0x00	; 0
 680:	8a 81       	ldd	r24, Y+2	; 0x02
 682:	80 83       	st	Z, r24
					break;
		default:	break;
		}
}
 684:	0f 90       	pop	r0
 686:	0f 90       	pop	r0
 688:	0f 90       	pop	r0
 68a:	0f 90       	pop	r0
 68c:	cf 91       	pop	r28
 68e:	df 91       	pop	r29
 690:	08 95       	ret

00000692 <MDIO_voidSetPortDirection>:
// PORT ID :- POTRTA - PORTB - PORTC - PORTD
// PORT DIRECTION:- PIN_INPUT - PIN_OUTPUT
void MDIO_voidSetPortDirection(u8 A_u8PortId, u8 A_u8Direction)
{
 692:	df 93       	push	r29
 694:	cf 93       	push	r28
 696:	00 d0       	rcall	.+0      	; 0x698 <MDIO_voidSetPortDirection+0x6>
 698:	00 d0       	rcall	.+0      	; 0x69a <MDIO_voidSetPortDirection+0x8>
 69a:	cd b7       	in	r28, 0x3d	; 61
 69c:	de b7       	in	r29, 0x3e	; 62
 69e:	89 83       	std	Y+1, r24	; 0x01
 6a0:	6a 83       	std	Y+2, r22	; 0x02
	switch(A_u8PortId)
 6a2:	89 81       	ldd	r24, Y+1	; 0x01
 6a4:	28 2f       	mov	r18, r24
 6a6:	30 e0       	ldi	r19, 0x00	; 0
 6a8:	3c 83       	std	Y+4, r19	; 0x04
 6aa:	2b 83       	std	Y+3, r18	; 0x03
 6ac:	8b 81       	ldd	r24, Y+3	; 0x03
 6ae:	9c 81       	ldd	r25, Y+4	; 0x04
 6b0:	81 30       	cpi	r24, 0x01	; 1
 6b2:	91 05       	cpc	r25, r1
 6b4:	d1 f0       	breq	.+52     	; 0x6ea <MDIO_voidSetPortDirection+0x58>
 6b6:	2b 81       	ldd	r18, Y+3	; 0x03
 6b8:	3c 81       	ldd	r19, Y+4	; 0x04
 6ba:	22 30       	cpi	r18, 0x02	; 2
 6bc:	31 05       	cpc	r19, r1
 6be:	2c f4       	brge	.+10     	; 0x6ca <MDIO_voidSetPortDirection+0x38>
 6c0:	8b 81       	ldd	r24, Y+3	; 0x03
 6c2:	9c 81       	ldd	r25, Y+4	; 0x04
 6c4:	00 97       	sbiw	r24, 0x00	; 0
 6c6:	61 f0       	breq	.+24     	; 0x6e0 <MDIO_voidSetPortDirection+0x4e>
 6c8:	1e c0       	rjmp	.+60     	; 0x706 <MDIO_voidSetPortDirection+0x74>
 6ca:	2b 81       	ldd	r18, Y+3	; 0x03
 6cc:	3c 81       	ldd	r19, Y+4	; 0x04
 6ce:	22 30       	cpi	r18, 0x02	; 2
 6d0:	31 05       	cpc	r19, r1
 6d2:	81 f0       	breq	.+32     	; 0x6f4 <MDIO_voidSetPortDirection+0x62>
 6d4:	8b 81       	ldd	r24, Y+3	; 0x03
 6d6:	9c 81       	ldd	r25, Y+4	; 0x04
 6d8:	83 30       	cpi	r24, 0x03	; 3
 6da:	91 05       	cpc	r25, r1
 6dc:	81 f0       	breq	.+32     	; 0x6fe <MDIO_voidSetPortDirection+0x6c>
 6de:	13 c0       	rjmp	.+38     	; 0x706 <MDIO_voidSetPortDirection+0x74>
		{
		case PORTA: DDRA_REG = A_u8Direction;
 6e0:	ea e3       	ldi	r30, 0x3A	; 58
 6e2:	f0 e0       	ldi	r31, 0x00	; 0
 6e4:	8a 81       	ldd	r24, Y+2	; 0x02
 6e6:	80 83       	st	Z, r24
 6e8:	0e c0       	rjmp	.+28     	; 0x706 <MDIO_voidSetPortDirection+0x74>
					break;
		case PORTB: DDRB_REG = A_u8Direction;
 6ea:	e7 e3       	ldi	r30, 0x37	; 55
 6ec:	f0 e0       	ldi	r31, 0x00	; 0
 6ee:	8a 81       	ldd	r24, Y+2	; 0x02
 6f0:	80 83       	st	Z, r24
 6f2:	09 c0       	rjmp	.+18     	; 0x706 <MDIO_voidSetPortDirection+0x74>
					break;
		case PORTC: DDRC_REG = A_u8Direction;
 6f4:	e4 e3       	ldi	r30, 0x34	; 52
 6f6:	f0 e0       	ldi	r31, 0x00	; 0
 6f8:	8a 81       	ldd	r24, Y+2	; 0x02
 6fa:	80 83       	st	Z, r24
 6fc:	04 c0       	rjmp	.+8      	; 0x706 <MDIO_voidSetPortDirection+0x74>
					break;
		case PORTD: DDRD_REG = A_u8Direction;
 6fe:	e1 e3       	ldi	r30, 0x31	; 49
 700:	f0 e0       	ldi	r31, 0x00	; 0
 702:	8a 81       	ldd	r24, Y+2	; 0x02
 704:	80 83       	st	Z, r24
					break;
		default:	break;
		}
}
 706:	0f 90       	pop	r0
 708:	0f 90       	pop	r0
 70a:	0f 90       	pop	r0
 70c:	0f 90       	pop	r0
 70e:	cf 91       	pop	r28
 710:	df 91       	pop	r29
 712:	08 95       	ret

00000714 <MEXTI_voidConfig>:
#include "../include/MCAL/EXTI/EXTI_configuration.h"



void MEXTI_voidConfig(u8 A_u8EXTI, u8 A_u8SenseMode)
{
 714:	df 93       	push	r29
 716:	cf 93       	push	r28
 718:	00 d0       	rcall	.+0      	; 0x71a <MEXTI_voidConfig+0x6>
 71a:	00 d0       	rcall	.+0      	; 0x71c <MEXTI_voidConfig+0x8>
 71c:	00 d0       	rcall	.+0      	; 0x71e <MEXTI_voidConfig+0xa>
 71e:	cd b7       	in	r28, 0x3d	; 61
 720:	de b7       	in	r29, 0x3e	; 62
 722:	89 83       	std	Y+1, r24	; 0x01
 724:	6a 83       	std	Y+2, r22	; 0x02
	if(A_u8SenseMode <4)
 726:	8a 81       	ldd	r24, Y+2	; 0x02
 728:	84 30       	cpi	r24, 0x04	; 4
 72a:	08 f0       	brcs	.+2      	; 0x72e <MEXTI_voidConfig+0x1a>
 72c:	5a c0       	rjmp	.+180    	; 0x7e2 <MEXTI_voidConfig+0xce>
	{
		switch (A_u8EXTI)
 72e:	89 81       	ldd	r24, Y+1	; 0x01
 730:	28 2f       	mov	r18, r24
 732:	30 e0       	ldi	r19, 0x00	; 0
 734:	3e 83       	std	Y+6, r19	; 0x06
 736:	2d 83       	std	Y+5, r18	; 0x05
 738:	8d 81       	ldd	r24, Y+5	; 0x05
 73a:	9e 81       	ldd	r25, Y+6	; 0x06
 73c:	81 30       	cpi	r24, 0x01	; 1
 73e:	91 05       	cpc	r25, r1
 740:	d1 f0       	breq	.+52     	; 0x776 <MEXTI_voidConfig+0x62>
 742:	2d 81       	ldd	r18, Y+5	; 0x05
 744:	3e 81       	ldd	r19, Y+6	; 0x06
 746:	22 30       	cpi	r18, 0x02	; 2
 748:	31 05       	cpc	r19, r1
 74a:	61 f1       	breq	.+88     	; 0x7a4 <MEXTI_voidConfig+0x90>
 74c:	8d 81       	ldd	r24, Y+5	; 0x05
 74e:	9e 81       	ldd	r25, Y+6	; 0x06
 750:	00 97       	sbiw	r24, 0x00	; 0
 752:	09 f0       	breq	.+2      	; 0x756 <MEXTI_voidConfig+0x42>
 754:	46 c0       	rjmp	.+140    	; 0x7e2 <MEXTI_voidConfig+0xce>
		{
			case EXTI0: /* WRITE THE SENSE MODE ON MCUCR BIT0 & BIT1 */
						MCUCR &= ~(SENSE_MODE_MASK << EXTI0_SENSE_BIT);
 756:	a5 e5       	ldi	r26, 0x55	; 85
 758:	b0 e0       	ldi	r27, 0x00	; 0
 75a:	e5 e5       	ldi	r30, 0x55	; 85
 75c:	f0 e0       	ldi	r31, 0x00	; 0
 75e:	80 81       	ld	r24, Z
 760:	8c 7f       	andi	r24, 0xFC	; 252
 762:	8c 93       	st	X, r24
						MCUCR |= (A_u8SenseMode << EXTI0_SENSE_BIT);
 764:	a5 e5       	ldi	r26, 0x55	; 85
 766:	b0 e0       	ldi	r27, 0x00	; 0
 768:	e5 e5       	ldi	r30, 0x55	; 85
 76a:	f0 e0       	ldi	r31, 0x00	; 0
 76c:	90 81       	ld	r25, Z
 76e:	8a 81       	ldd	r24, Y+2	; 0x02
 770:	89 2b       	or	r24, r25
 772:	8c 93       	st	X, r24
 774:	36 c0       	rjmp	.+108    	; 0x7e2 <MEXTI_voidConfig+0xce>
						break;
			case EXTI1: /* WRITE THE SENSE MODE ON MCUCR BIT2 & BIT3 */
						MCUCR &= ~(SENSE_MODE_MASK << EXTI1_SENSE_BIT);
 776:	a5 e5       	ldi	r26, 0x55	; 85
 778:	b0 e0       	ldi	r27, 0x00	; 0
 77a:	e5 e5       	ldi	r30, 0x55	; 85
 77c:	f0 e0       	ldi	r31, 0x00	; 0
 77e:	80 81       	ld	r24, Z
 780:	83 7f       	andi	r24, 0xF3	; 243
 782:	8c 93       	st	X, r24
						MCUCR |= (A_u8SenseMode << EXTI1_SENSE_BIT);
 784:	a5 e5       	ldi	r26, 0x55	; 85
 786:	b0 e0       	ldi	r27, 0x00	; 0
 788:	e5 e5       	ldi	r30, 0x55	; 85
 78a:	f0 e0       	ldi	r31, 0x00	; 0
 78c:	80 81       	ld	r24, Z
 78e:	28 2f       	mov	r18, r24
 790:	8a 81       	ldd	r24, Y+2	; 0x02
 792:	88 2f       	mov	r24, r24
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	88 0f       	add	r24, r24
 798:	99 1f       	adc	r25, r25
 79a:	88 0f       	add	r24, r24
 79c:	99 1f       	adc	r25, r25
 79e:	82 2b       	or	r24, r18
 7a0:	8c 93       	st	X, r24
 7a2:	1f c0       	rjmp	.+62     	; 0x7e2 <MEXTI_voidConfig+0xce>
						break;
			case EXTI2:/*SWITCH ON SENSE MODE AND WRITE ON MCUSCR BIT 6 */
						switch(A_u8SenseMode)
 7a4:	8a 81       	ldd	r24, Y+2	; 0x02
 7a6:	28 2f       	mov	r18, r24
 7a8:	30 e0       	ldi	r19, 0x00	; 0
 7aa:	3c 83       	std	Y+4, r19	; 0x04
 7ac:	2b 83       	std	Y+3, r18	; 0x03
 7ae:	8b 81       	ldd	r24, Y+3	; 0x03
 7b0:	9c 81       	ldd	r25, Y+4	; 0x04
 7b2:	82 30       	cpi	r24, 0x02	; 2
 7b4:	91 05       	cpc	r25, r1
 7b6:	31 f0       	breq	.+12     	; 0x7c4 <MEXTI_voidConfig+0xb0>
 7b8:	2b 81       	ldd	r18, Y+3	; 0x03
 7ba:	3c 81       	ldd	r19, Y+4	; 0x04
 7bc:	23 30       	cpi	r18, 0x03	; 3
 7be:	31 05       	cpc	r19, r1
 7c0:	49 f0       	breq	.+18     	; 0x7d4 <MEXTI_voidConfig+0xc0>
 7c2:	0f c0       	rjmp	.+30     	; 0x7e2 <MEXTI_voidConfig+0xce>
						{
							case FALLING_EDGE: /*MCUCSR BIT6 = 0 */
												CLR_BIT(MCUCSR,6);break;
 7c4:	a4 e5       	ldi	r26, 0x54	; 84
 7c6:	b0 e0       	ldi	r27, 0x00	; 0
 7c8:	e4 e5       	ldi	r30, 0x54	; 84
 7ca:	f0 e0       	ldi	r31, 0x00	; 0
 7cc:	80 81       	ld	r24, Z
 7ce:	8f 7b       	andi	r24, 0xBF	; 191
 7d0:	8c 93       	st	X, r24
 7d2:	07 c0       	rjmp	.+14     	; 0x7e2 <MEXTI_voidConfig+0xce>
							case RISING_EDGE: /* MCUCSR BIT6 = 1 */
												SET_BIT(MCUCSR,6);break;
 7d4:	a4 e5       	ldi	r26, 0x54	; 84
 7d6:	b0 e0       	ldi	r27, 0x00	; 0
 7d8:	e4 e5       	ldi	r30, 0x54	; 84
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	80 81       	ld	r24, Z
 7de:	80 64       	ori	r24, 0x40	; 64
 7e0:	8c 93       	st	X, r24
						break;
			default:
					break;
		}
	}
}
 7e2:	26 96       	adiw	r28, 0x06	; 6
 7e4:	0f b6       	in	r0, 0x3f	; 63
 7e6:	f8 94       	cli
 7e8:	de bf       	out	0x3e, r29	; 62
 7ea:	0f be       	out	0x3f, r0	; 63
 7ec:	cd bf       	out	0x3d, r28	; 61
 7ee:	cf 91       	pop	r28
 7f0:	df 91       	pop	r29
 7f2:	08 95       	ret

000007f4 <MEXTI_voidEnable>:



void MEXTI_voidEnable(u8 A_u8EXTI)
{
 7f4:	df 93       	push	r29
 7f6:	cf 93       	push	r28
 7f8:	00 d0       	rcall	.+0      	; 0x7fa <MEXTI_voidEnable+0x6>
 7fa:	0f 92       	push	r0
 7fc:	cd b7       	in	r28, 0x3d	; 61
 7fe:	de b7       	in	r29, 0x3e	; 62
 800:	89 83       	std	Y+1, r24	; 0x01
	switch (A_u8EXTI)
 802:	89 81       	ldd	r24, Y+1	; 0x01
 804:	28 2f       	mov	r18, r24
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	3b 83       	std	Y+3, r19	; 0x03
 80a:	2a 83       	std	Y+2, r18	; 0x02
 80c:	8a 81       	ldd	r24, Y+2	; 0x02
 80e:	9b 81       	ldd	r25, Y+3	; 0x03
 810:	81 30       	cpi	r24, 0x01	; 1
 812:	91 05       	cpc	r25, r1
 814:	89 f0       	breq	.+34     	; 0x838 <MEXTI_voidEnable+0x44>
 816:	2a 81       	ldd	r18, Y+2	; 0x02
 818:	3b 81       	ldd	r19, Y+3	; 0x03
 81a:	22 30       	cpi	r18, 0x02	; 2
 81c:	31 05       	cpc	r19, r1
 81e:	a1 f0       	breq	.+40     	; 0x848 <MEXTI_voidEnable+0x54>
 820:	8a 81       	ldd	r24, Y+2	; 0x02
 822:	9b 81       	ldd	r25, Y+3	; 0x03
 824:	00 97       	sbiw	r24, 0x00	; 0
 826:	b9 f4       	brne	.+46     	; 0x856 <MEXTI_voidEnable+0x62>
	{
		case EXTI0: /* WRITE ONE ON GICR BIT 6 */
					SET_BIT(GICR,EXTI0_EN_BIT);
 828:	ab e5       	ldi	r26, 0x5B	; 91
 82a:	b0 e0       	ldi	r27, 0x00	; 0
 82c:	eb e5       	ldi	r30, 0x5B	; 91
 82e:	f0 e0       	ldi	r31, 0x00	; 0
 830:	80 81       	ld	r24, Z
 832:	80 64       	ori	r24, 0x40	; 64
 834:	8c 93       	st	X, r24
 836:	0f c0       	rjmp	.+30     	; 0x856 <MEXTI_voidEnable+0x62>
					break;
		case EXTI1: /* WRITE ONE ON GICR BIT 7 */
					SET_BIT(GICR,EXTI1_EN_BIT);
 838:	ab e5       	ldi	r26, 0x5B	; 91
 83a:	b0 e0       	ldi	r27, 0x00	; 0
 83c:	eb e5       	ldi	r30, 0x5B	; 91
 83e:	f0 e0       	ldi	r31, 0x00	; 0
 840:	80 81       	ld	r24, Z
 842:	80 68       	ori	r24, 0x80	; 128
 844:	8c 93       	st	X, r24
 846:	07 c0       	rjmp	.+14     	; 0x856 <MEXTI_voidEnable+0x62>
					break;
		case EXTI2: /* WRITE ONE ON GICR BIT 5 */
					SET_BIT(GICR,EXTI2_EN_BIT);
 848:	ab e5       	ldi	r26, 0x5B	; 91
 84a:	b0 e0       	ldi	r27, 0x00	; 0
 84c:	eb e5       	ldi	r30, 0x5B	; 91
 84e:	f0 e0       	ldi	r31, 0x00	; 0
 850:	80 81       	ld	r24, Z
 852:	80 62       	ori	r24, 0x20	; 32
 854:	8c 93       	st	X, r24
					break;
		default:
				break;
	}
}
 856:	0f 90       	pop	r0
 858:	0f 90       	pop	r0
 85a:	0f 90       	pop	r0
 85c:	cf 91       	pop	r28
 85e:	df 91       	pop	r29
 860:	08 95       	ret

00000862 <MEXTI_voidDisable>:
void MEXTI_voidDisable(u8 A_u8EXTI)
{
 862:	df 93       	push	r29
 864:	cf 93       	push	r28
 866:	00 d0       	rcall	.+0      	; 0x868 <MEXTI_voidDisable+0x6>
 868:	0f 92       	push	r0
 86a:	cd b7       	in	r28, 0x3d	; 61
 86c:	de b7       	in	r29, 0x3e	; 62
 86e:	89 83       	std	Y+1, r24	; 0x01
	switch (A_u8EXTI)
 870:	89 81       	ldd	r24, Y+1	; 0x01
 872:	28 2f       	mov	r18, r24
 874:	30 e0       	ldi	r19, 0x00	; 0
 876:	3b 83       	std	Y+3, r19	; 0x03
 878:	2a 83       	std	Y+2, r18	; 0x02
 87a:	8a 81       	ldd	r24, Y+2	; 0x02
 87c:	9b 81       	ldd	r25, Y+3	; 0x03
 87e:	81 30       	cpi	r24, 0x01	; 1
 880:	91 05       	cpc	r25, r1
 882:	89 f0       	breq	.+34     	; 0x8a6 <MEXTI_voidDisable+0x44>
 884:	2a 81       	ldd	r18, Y+2	; 0x02
 886:	3b 81       	ldd	r19, Y+3	; 0x03
 888:	22 30       	cpi	r18, 0x02	; 2
 88a:	31 05       	cpc	r19, r1
 88c:	a1 f0       	breq	.+40     	; 0x8b6 <MEXTI_voidDisable+0x54>
 88e:	8a 81       	ldd	r24, Y+2	; 0x02
 890:	9b 81       	ldd	r25, Y+3	; 0x03
 892:	00 97       	sbiw	r24, 0x00	; 0
 894:	b9 f4       	brne	.+46     	; 0x8c4 <MEXTI_voidDisable+0x62>
	{
		case EXTI0: /* WRITE ZERO ON GICR BIT 6 */
					CLR_BIT(GICR,EXTI0_EN_BIT);
 896:	ab e5       	ldi	r26, 0x5B	; 91
 898:	b0 e0       	ldi	r27, 0x00	; 0
 89a:	eb e5       	ldi	r30, 0x5B	; 91
 89c:	f0 e0       	ldi	r31, 0x00	; 0
 89e:	80 81       	ld	r24, Z
 8a0:	8f 7b       	andi	r24, 0xBF	; 191
 8a2:	8c 93       	st	X, r24
 8a4:	0f c0       	rjmp	.+30     	; 0x8c4 <MEXTI_voidDisable+0x62>
					break;
		case EXTI1: /* WRITE ZERO ON GICR BIT 7 */
					CLR_BIT(GICR,EXTI1_EN_BIT);
 8a6:	ab e5       	ldi	r26, 0x5B	; 91
 8a8:	b0 e0       	ldi	r27, 0x00	; 0
 8aa:	eb e5       	ldi	r30, 0x5B	; 91
 8ac:	f0 e0       	ldi	r31, 0x00	; 0
 8ae:	80 81       	ld	r24, Z
 8b0:	8f 77       	andi	r24, 0x7F	; 127
 8b2:	8c 93       	st	X, r24
 8b4:	07 c0       	rjmp	.+14     	; 0x8c4 <MEXTI_voidDisable+0x62>
					break;
		case EXTI2: /* WRITE ZERO ON GICR BIT 5 */
					CLR_BIT(GICR,EXTI2_EN_BIT);
 8b6:	ab e5       	ldi	r26, 0x5B	; 91
 8b8:	b0 e0       	ldi	r27, 0x00	; 0
 8ba:	eb e5       	ldi	r30, 0x5B	; 91
 8bc:	f0 e0       	ldi	r31, 0x00	; 0
 8be:	80 81       	ld	r24, Z
 8c0:	8f 7d       	andi	r24, 0xDF	; 223
 8c2:	8c 93       	st	X, r24
					break;
		default:
				 break;
	}
}
 8c4:	0f 90       	pop	r0
 8c6:	0f 90       	pop	r0
 8c8:	0f 90       	pop	r0
 8ca:	cf 91       	pop	r28
 8cc:	df 91       	pop	r29
 8ce:	08 95       	ret

000008d0 <MEXTI_voidClearFlag>:

void MEXTI_voidClearFlag(u8 A_u8EXTI)
{
 8d0:	df 93       	push	r29
 8d2:	cf 93       	push	r28
 8d4:	00 d0       	rcall	.+0      	; 0x8d6 <MEXTI_voidClearFlag+0x6>
 8d6:	0f 92       	push	r0
 8d8:	cd b7       	in	r28, 0x3d	; 61
 8da:	de b7       	in	r29, 0x3e	; 62
 8dc:	89 83       	std	Y+1, r24	; 0x01
	switch (A_u8EXTI)
 8de:	89 81       	ldd	r24, Y+1	; 0x01
 8e0:	28 2f       	mov	r18, r24
 8e2:	30 e0       	ldi	r19, 0x00	; 0
 8e4:	3b 83       	std	Y+3, r19	; 0x03
 8e6:	2a 83       	std	Y+2, r18	; 0x02
 8e8:	8a 81       	ldd	r24, Y+2	; 0x02
 8ea:	9b 81       	ldd	r25, Y+3	; 0x03
 8ec:	81 30       	cpi	r24, 0x01	; 1
 8ee:	91 05       	cpc	r25, r1
 8f0:	89 f0       	breq	.+34     	; 0x914 <MEXTI_voidClearFlag+0x44>
 8f2:	2a 81       	ldd	r18, Y+2	; 0x02
 8f4:	3b 81       	ldd	r19, Y+3	; 0x03
 8f6:	22 30       	cpi	r18, 0x02	; 2
 8f8:	31 05       	cpc	r19, r1
 8fa:	a1 f0       	breq	.+40     	; 0x924 <MEXTI_voidClearFlag+0x54>
 8fc:	8a 81       	ldd	r24, Y+2	; 0x02
 8fe:	9b 81       	ldd	r25, Y+3	; 0x03
 900:	00 97       	sbiw	r24, 0x00	; 0
 902:	b9 f4       	brne	.+46     	; 0x932 <MEXTI_voidClearFlag+0x62>
		{
			case EXTI0: /* WRITE ONE ON GIFR BIT 6 */
						SET_BIT(GIFR,EXTI0_FLAG_BIT);
 904:	aa e5       	ldi	r26, 0x5A	; 90
 906:	b0 e0       	ldi	r27, 0x00	; 0
 908:	ea e5       	ldi	r30, 0x5A	; 90
 90a:	f0 e0       	ldi	r31, 0x00	; 0
 90c:	80 81       	ld	r24, Z
 90e:	80 64       	ori	r24, 0x40	; 64
 910:	8c 93       	st	X, r24
 912:	0f c0       	rjmp	.+30     	; 0x932 <MEXTI_voidClearFlag+0x62>
						break;
			case EXTI1: /* WRITE ONE ON GIFR BIT 7 */
						SET_BIT(GIFR,EXTI1_FLAG_BIT);
 914:	aa e5       	ldi	r26, 0x5A	; 90
 916:	b0 e0       	ldi	r27, 0x00	; 0
 918:	ea e5       	ldi	r30, 0x5A	; 90
 91a:	f0 e0       	ldi	r31, 0x00	; 0
 91c:	80 81       	ld	r24, Z
 91e:	80 68       	ori	r24, 0x80	; 128
 920:	8c 93       	st	X, r24
 922:	07 c0       	rjmp	.+14     	; 0x932 <MEXTI_voidClearFlag+0x62>
						break;
			case EXTI2: /* WRITE ONE ON GIFR BIT 5 */
						SET_BIT(GIFR,EXTI2_FLAG_BIT);
 924:	aa e5       	ldi	r26, 0x5A	; 90
 926:	b0 e0       	ldi	r27, 0x00	; 0
 928:	ea e5       	ldi	r30, 0x5A	; 90
 92a:	f0 e0       	ldi	r31, 0x00	; 0
 92c:	80 81       	ld	r24, Z
 92e:	80 62       	ori	r24, 0x20	; 32
 930:	8c 93       	st	X, r24
						break;
			default:
					break;
		}
}
 932:	0f 90       	pop	r0
 934:	0f 90       	pop	r0
 936:	0f 90       	pop	r0
 938:	cf 91       	pop	r28
 93a:	df 91       	pop	r29
 93c:	08 95       	ret

0000093e <MEXTI_voidSetCallBack>:
void (*EXTI0_CallBack) (void) =NULL;
void (*EXTI1_CallBack) (void) =NULL;
void (*EXTI2_CallBack) (void) =NULL;

void MEXTI_voidSetCallBack(void (*PtrToFunction)(void),u8 A_u8EXTI)
{
 93e:	df 93       	push	r29
 940:	cf 93       	push	r28
 942:	00 d0       	rcall	.+0      	; 0x944 <MEXTI_voidSetCallBack+0x6>
 944:	00 d0       	rcall	.+0      	; 0x946 <MEXTI_voidSetCallBack+0x8>
 946:	0f 92       	push	r0
 948:	cd b7       	in	r28, 0x3d	; 61
 94a:	de b7       	in	r29, 0x3e	; 62
 94c:	9a 83       	std	Y+2, r25	; 0x02
 94e:	89 83       	std	Y+1, r24	; 0x01
 950:	6b 83       	std	Y+3, r22	; 0x03
	if(PtrToFunction != NULL)
 952:	89 81       	ldd	r24, Y+1	; 0x01
 954:	9a 81       	ldd	r25, Y+2	; 0x02
 956:	00 97       	sbiw	r24, 0x00	; 0
 958:	39 f1       	breq	.+78     	; 0x9a8 <MEXTI_voidSetCallBack+0x6a>
	{
		switch(A_u8EXTI)
 95a:	8b 81       	ldd	r24, Y+3	; 0x03
 95c:	28 2f       	mov	r18, r24
 95e:	30 e0       	ldi	r19, 0x00	; 0
 960:	3d 83       	std	Y+5, r19	; 0x05
 962:	2c 83       	std	Y+4, r18	; 0x04
 964:	8c 81       	ldd	r24, Y+4	; 0x04
 966:	9d 81       	ldd	r25, Y+5	; 0x05
 968:	81 30       	cpi	r24, 0x01	; 1
 96a:	91 05       	cpc	r25, r1
 96c:	81 f0       	breq	.+32     	; 0x98e <MEXTI_voidSetCallBack+0x50>
 96e:	2c 81       	ldd	r18, Y+4	; 0x04
 970:	3d 81       	ldd	r19, Y+5	; 0x05
 972:	22 30       	cpi	r18, 0x02	; 2
 974:	31 05       	cpc	r19, r1
 976:	91 f0       	breq	.+36     	; 0x99c <MEXTI_voidSetCallBack+0x5e>
 978:	8c 81       	ldd	r24, Y+4	; 0x04
 97a:	9d 81       	ldd	r25, Y+5	; 0x05
 97c:	00 97       	sbiw	r24, 0x00	; 0
 97e:	a1 f4       	brne	.+40     	; 0x9a8 <MEXTI_voidSetCallBack+0x6a>
		{
		case EXTI0: EXTI0_CallBack = PtrToFunction; break;
 980:	89 81       	ldd	r24, Y+1	; 0x01
 982:	9a 81       	ldd	r25, Y+2	; 0x02
 984:	90 93 61 00 	sts	0x0061, r25
 988:	80 93 60 00 	sts	0x0060, r24
 98c:	0d c0       	rjmp	.+26     	; 0x9a8 <MEXTI_voidSetCallBack+0x6a>
		case EXTI1: EXTI1_CallBack = PtrToFunction; break;
 98e:	89 81       	ldd	r24, Y+1	; 0x01
 990:	9a 81       	ldd	r25, Y+2	; 0x02
 992:	90 93 63 00 	sts	0x0063, r25
 996:	80 93 62 00 	sts	0x0062, r24
 99a:	06 c0       	rjmp	.+12     	; 0x9a8 <MEXTI_voidSetCallBack+0x6a>
		case EXTI2: EXTI2_CallBack = PtrToFunction; break;
 99c:	89 81       	ldd	r24, Y+1	; 0x01
 99e:	9a 81       	ldd	r25, Y+2	; 0x02
 9a0:	90 93 65 00 	sts	0x0065, r25
 9a4:	80 93 64 00 	sts	0x0064, r24
		default: break;
		}
	}
}
 9a8:	0f 90       	pop	r0
 9aa:	0f 90       	pop	r0
 9ac:	0f 90       	pop	r0
 9ae:	0f 90       	pop	r0
 9b0:	0f 90       	pop	r0
 9b2:	cf 91       	pop	r28
 9b4:	df 91       	pop	r29
 9b6:	08 95       	ret

000009b8 <__vector_1>:
/* VECTORS */
void __vector_1(void)  __attribute__((signal));
void __vector_1(void)
{
 9b8:	1f 92       	push	r1
 9ba:	0f 92       	push	r0
 9bc:	0f b6       	in	r0, 0x3f	; 63
 9be:	0f 92       	push	r0
 9c0:	11 24       	eor	r1, r1
 9c2:	2f 93       	push	r18
 9c4:	3f 93       	push	r19
 9c6:	4f 93       	push	r20
 9c8:	5f 93       	push	r21
 9ca:	6f 93       	push	r22
 9cc:	7f 93       	push	r23
 9ce:	8f 93       	push	r24
 9d0:	9f 93       	push	r25
 9d2:	af 93       	push	r26
 9d4:	bf 93       	push	r27
 9d6:	ef 93       	push	r30
 9d8:	ff 93       	push	r31
 9da:	df 93       	push	r29
 9dc:	cf 93       	push	r28
 9de:	cd b7       	in	r28, 0x3d	; 61
 9e0:	de b7       	in	r29, 0x3e	; 62
	if(EXTI0_CallBack != NULL)
 9e2:	80 91 60 00 	lds	r24, 0x0060
 9e6:	90 91 61 00 	lds	r25, 0x0061
 9ea:	00 97       	sbiw	r24, 0x00	; 0
 9ec:	29 f0       	breq	.+10     	; 0x9f8 <__vector_1+0x40>
	{
		EXTI0_CallBack();
 9ee:	e0 91 60 00 	lds	r30, 0x0060
 9f2:	f0 91 61 00 	lds	r31, 0x0061
 9f6:	09 95       	icall
	}
}
 9f8:	cf 91       	pop	r28
 9fa:	df 91       	pop	r29
 9fc:	ff 91       	pop	r31
 9fe:	ef 91       	pop	r30
 a00:	bf 91       	pop	r27
 a02:	af 91       	pop	r26
 a04:	9f 91       	pop	r25
 a06:	8f 91       	pop	r24
 a08:	7f 91       	pop	r23
 a0a:	6f 91       	pop	r22
 a0c:	5f 91       	pop	r21
 a0e:	4f 91       	pop	r20
 a10:	3f 91       	pop	r19
 a12:	2f 91       	pop	r18
 a14:	0f 90       	pop	r0
 a16:	0f be       	out	0x3f, r0	; 63
 a18:	0f 90       	pop	r0
 a1a:	1f 90       	pop	r1
 a1c:	18 95       	reti

00000a1e <__vector_2>:

void __vector_2(void)  __attribute__((signal));
void __vector_2(void)
{
 a1e:	1f 92       	push	r1
 a20:	0f 92       	push	r0
 a22:	0f b6       	in	r0, 0x3f	; 63
 a24:	0f 92       	push	r0
 a26:	11 24       	eor	r1, r1
 a28:	2f 93       	push	r18
 a2a:	3f 93       	push	r19
 a2c:	4f 93       	push	r20
 a2e:	5f 93       	push	r21
 a30:	6f 93       	push	r22
 a32:	7f 93       	push	r23
 a34:	8f 93       	push	r24
 a36:	9f 93       	push	r25
 a38:	af 93       	push	r26
 a3a:	bf 93       	push	r27
 a3c:	ef 93       	push	r30
 a3e:	ff 93       	push	r31
 a40:	df 93       	push	r29
 a42:	cf 93       	push	r28
 a44:	cd b7       	in	r28, 0x3d	; 61
 a46:	de b7       	in	r29, 0x3e	; 62
	if(EXTI1_CallBack != NULL)
 a48:	80 91 62 00 	lds	r24, 0x0062
 a4c:	90 91 63 00 	lds	r25, 0x0063
 a50:	00 97       	sbiw	r24, 0x00	; 0
 a52:	29 f0       	breq	.+10     	; 0xa5e <__vector_2+0x40>
	{
		EXTI1_CallBack();
 a54:	e0 91 62 00 	lds	r30, 0x0062
 a58:	f0 91 63 00 	lds	r31, 0x0063
 a5c:	09 95       	icall
	}
}
 a5e:	cf 91       	pop	r28
 a60:	df 91       	pop	r29
 a62:	ff 91       	pop	r31
 a64:	ef 91       	pop	r30
 a66:	bf 91       	pop	r27
 a68:	af 91       	pop	r26
 a6a:	9f 91       	pop	r25
 a6c:	8f 91       	pop	r24
 a6e:	7f 91       	pop	r23
 a70:	6f 91       	pop	r22
 a72:	5f 91       	pop	r21
 a74:	4f 91       	pop	r20
 a76:	3f 91       	pop	r19
 a78:	2f 91       	pop	r18
 a7a:	0f 90       	pop	r0
 a7c:	0f be       	out	0x3f, r0	; 63
 a7e:	0f 90       	pop	r0
 a80:	1f 90       	pop	r1
 a82:	18 95       	reti

00000a84 <__vector_3>:

void __vector_3(void)  __attribute__((signal));
void __vector_3(void)
{
 a84:	1f 92       	push	r1
 a86:	0f 92       	push	r0
 a88:	0f b6       	in	r0, 0x3f	; 63
 a8a:	0f 92       	push	r0
 a8c:	11 24       	eor	r1, r1
 a8e:	2f 93       	push	r18
 a90:	3f 93       	push	r19
 a92:	4f 93       	push	r20
 a94:	5f 93       	push	r21
 a96:	6f 93       	push	r22
 a98:	7f 93       	push	r23
 a9a:	8f 93       	push	r24
 a9c:	9f 93       	push	r25
 a9e:	af 93       	push	r26
 aa0:	bf 93       	push	r27
 aa2:	ef 93       	push	r30
 aa4:	ff 93       	push	r31
 aa6:	df 93       	push	r29
 aa8:	cf 93       	push	r28
 aaa:	cd b7       	in	r28, 0x3d	; 61
 aac:	de b7       	in	r29, 0x3e	; 62
	if(EXTI2_CallBack != NULL)
 aae:	80 91 64 00 	lds	r24, 0x0064
 ab2:	90 91 65 00 	lds	r25, 0x0065
 ab6:	00 97       	sbiw	r24, 0x00	; 0
 ab8:	29 f0       	breq	.+10     	; 0xac4 <__vector_3+0x40>
	{
		EXTI2_CallBack();
 aba:	e0 91 64 00 	lds	r30, 0x0064
 abe:	f0 91 65 00 	lds	r31, 0x0065
 ac2:	09 95       	icall
	}
}
 ac4:	cf 91       	pop	r28
 ac6:	df 91       	pop	r29
 ac8:	ff 91       	pop	r31
 aca:	ef 91       	pop	r30
 acc:	bf 91       	pop	r27
 ace:	af 91       	pop	r26
 ad0:	9f 91       	pop	r25
 ad2:	8f 91       	pop	r24
 ad4:	7f 91       	pop	r23
 ad6:	6f 91       	pop	r22
 ad8:	5f 91       	pop	r21
 ada:	4f 91       	pop	r20
 adc:	3f 91       	pop	r19
 ade:	2f 91       	pop	r18
 ae0:	0f 90       	pop	r0
 ae2:	0f be       	out	0x3f, r0	; 63
 ae4:	0f 90       	pop	r0
 ae6:	1f 90       	pop	r1
 ae8:	18 95       	reti

00000aea <MGI_voidEnable>:
#include "../include/MCAL/GI/GI_configuration.h"



void MGI_voidEnable(void)
{
 aea:	df 93       	push	r29
 aec:	cf 93       	push	r28
 aee:	cd b7       	in	r28, 0x3d	; 61
 af0:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,GLOBAL_INTERRUPT_ENABLE_BIT);
 af2:	af e5       	ldi	r26, 0x5F	; 95
 af4:	b0 e0       	ldi	r27, 0x00	; 0
 af6:	ef e5       	ldi	r30, 0x5F	; 95
 af8:	f0 e0       	ldi	r31, 0x00	; 0
 afa:	80 81       	ld	r24, Z
 afc:	80 68       	ori	r24, 0x80	; 128
 afe:	8c 93       	st	X, r24
}
 b00:	cf 91       	pop	r28
 b02:	df 91       	pop	r29
 b04:	08 95       	ret

00000b06 <MGI_voidDisable>:
void MGI_voidDisable(void)
{
 b06:	df 93       	push	r29
 b08:	cf 93       	push	r28
 b0a:	cd b7       	in	r28, 0x3d	; 61
 b0c:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG,GLOBAL_INTERRUPT_ENABLE_BIT);
 b0e:	af e5       	ldi	r26, 0x5F	; 95
 b10:	b0 e0       	ldi	r27, 0x00	; 0
 b12:	ef e5       	ldi	r30, 0x5F	; 95
 b14:	f0 e0       	ldi	r31, 0x00	; 0
 b16:	80 81       	ld	r24, Z
 b18:	8f 77       	andi	r24, 0x7F	; 127
 b1a:	8c 93       	st	X, r24
}
 b1c:	cf 91       	pop	r28
 b1e:	df 91       	pop	r29
 b20:	08 95       	ret

00000b22 <main>:

#include "../include/MCAL/GI/GI_interface.h"

void ToggelLed(void);
void main(void)
{
 b22:	df 93       	push	r29
 b24:	cf 93       	push	r28
 b26:	cd b7       	in	r28, 0x3d	; 61
 b28:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidInit();
 b2a:	0e 94 3e 00 	call	0x7c	; 0x7c <MDIO_voidInit>
	MGI_voidEnable();
 b2e:	0e 94 75 05 	call	0xaea	; 0xaea <MGI_voidEnable>
	MEXTI_voidSetCallBack(ToggelLed,EXTI0);
 b32:	86 ea       	ldi	r24, 0xA6	; 166
 b34:	95 e0       	ldi	r25, 0x05	; 5
 b36:	60 e0       	ldi	r22, 0x00	; 0
 b38:	0e 94 9f 04 	call	0x93e	; 0x93e <MEXTI_voidSetCallBack>
	MEXTI_voidConfig(EXTI0,FALLING_EDGE);
 b3c:	80 e0       	ldi	r24, 0x00	; 0
 b3e:	62 e0       	ldi	r22, 0x02	; 2
 b40:	0e 94 8a 03 	call	0x714	; 0x714 <MEXTI_voidConfig>
	MEXTI_voidDisable(EXTI0);
 b44:	80 e0       	ldi	r24, 0x00	; 0
 b46:	0e 94 31 04 	call	0x862	; 0x862 <MEXTI_voidDisable>
 b4a:	ff cf       	rjmp	.-2      	; 0xb4a <main+0x28>

00000b4c <ToggelLed>:
}



void ToggelLed(void)
{
 b4c:	df 93       	push	r29
 b4e:	cf 93       	push	r28
 b50:	cd b7       	in	r28, 0x3d	; 61
 b52:	de b7       	in	r29, 0x3e	; 62
	static u8 local_u8Flag = 0;
	if(local_u8Flag == 0)
 b54:	80 91 66 00 	lds	r24, 0x0066
 b58:	88 23       	and	r24, r24
 b5a:	49 f4       	brne	.+18     	; 0xb6e <ToggelLed+0x22>
	{
		MDIO_voidSetPinValue(PORTA,PIN0,PIN_HIGH);
 b5c:	80 e0       	ldi	r24, 0x00	; 0
 b5e:	60 e0       	ldi	r22, 0x00	; 0
 b60:	41 e0       	ldi	r20, 0x01	; 1
 b62:	0e 94 78 01 	call	0x2f0	; 0x2f0 <MDIO_voidSetPinValue>
		local_u8Flag = 1;
 b66:	81 e0       	ldi	r24, 0x01	; 1
 b68:	80 93 66 00 	sts	0x0066, r24
 b6c:	07 c0       	rjmp	.+14     	; 0xb7c <ToggelLed+0x30>
	}
	else
	{
		MDIO_voidSetPinValue(PORTA,PIN0,PIN_LOW);
 b6e:	80 e0       	ldi	r24, 0x00	; 0
 b70:	60 e0       	ldi	r22, 0x00	; 0
 b72:	40 e0       	ldi	r20, 0x00	; 0
 b74:	0e 94 78 01 	call	0x2f0	; 0x2f0 <MDIO_voidSetPinValue>
		local_u8Flag = 0;
 b78:	10 92 66 00 	sts	0x0066, r1
	}
}
 b7c:	cf 91       	pop	r28
 b7e:	df 91       	pop	r29
 b80:	08 95       	ret

00000b82 <_exit>:
 b82:	f8 94       	cli

00000b84 <__stop_program>:
 b84:	ff cf       	rjmp	.-2      	; 0xb84 <__stop_program>
